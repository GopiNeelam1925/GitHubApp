// Generated by Dagger (https://google.github.io/dagger).
package com.piotr.xapo.fragment.details;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class DetailsModule_ProvideViewFactory implements Factory<Contract.View> {
  private final DetailsModule module;

  public DetailsModule_ProvideViewFactory(DetailsModule module) {
    this.module = module;
  }

  @Override
  public Contract.View get() {
    return provideInstance(module);
  }

  public static Contract.View provideInstance(DetailsModule module) {
    return proxyProvideView(module);
  }

  public static DetailsModule_ProvideViewFactory create(DetailsModule module) {
    return new DetailsModule_ProvideViewFactory(module);
  }

  public static Contract.View proxyProvideView(DetailsModule instance) {
    return Preconditions.checkNotNull(
        instance.provideView(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
