// Generated by Dagger (https://google.github.io/dagger).
package com.piotr.xapo.fragment.list;

import com.piotr.xapo.api.GitHubApi;
import com.piotr.xapo.dao.DaoRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class ListPresenter_Factory implements Factory<ListPresenter> {
  private final Provider<Contract.View> viewProvider;

  private final Provider<GitHubApi> gitHubApiProvider;

  private final Provider<DaoRepository> repositoryProvider;

  public ListPresenter_Factory(
      Provider<Contract.View> viewProvider,
      Provider<GitHubApi> gitHubApiProvider,
      Provider<DaoRepository> repositoryProvider) {
    this.viewProvider = viewProvider;
    this.gitHubApiProvider = gitHubApiProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public ListPresenter get() {
    return provideInstance(viewProvider, gitHubApiProvider, repositoryProvider);
  }

  public static ListPresenter provideInstance(
      Provider<Contract.View> viewProvider,
      Provider<GitHubApi> gitHubApiProvider,
      Provider<DaoRepository> repositoryProvider) {
    return new ListPresenter(viewProvider.get(), gitHubApiProvider.get(), repositoryProvider.get());
  }

  public static ListPresenter_Factory create(
      Provider<Contract.View> viewProvider,
      Provider<GitHubApi> gitHubApiProvider,
      Provider<DaoRepository> repositoryProvider) {
    return new ListPresenter_Factory(viewProvider, gitHubApiProvider, repositoryProvider);
  }

  public static ListPresenter newListPresenter(
      Contract.View view, GitHubApi gitHubApi, DaoRepository repository) {
    return new ListPresenter(view, gitHubApi, repository);
  }
}
