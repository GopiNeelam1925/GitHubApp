// Generated by Dagger (https://google.github.io/dagger).
package com.piotr.xapo.di;

import com.piotr.xapo.dao.DaoRepository;
import com.piotr.xapo.dao.MyRoomDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ApplicationModule_GetDaoRepositoryFactory implements Factory<DaoRepository> {
  private final ApplicationModule module;

  private final Provider<MyRoomDatabase> myRoomDatabaseProvider;

  public ApplicationModule_GetDaoRepositoryFactory(
      ApplicationModule module, Provider<MyRoomDatabase> myRoomDatabaseProvider) {
    this.module = module;
    this.myRoomDatabaseProvider = myRoomDatabaseProvider;
  }

  @Override
  public DaoRepository get() {
    return provideInstance(module, myRoomDatabaseProvider);
  }

  public static DaoRepository provideInstance(
      ApplicationModule module, Provider<MyRoomDatabase> myRoomDatabaseProvider) {
    return proxyGetDaoRepository(module, myRoomDatabaseProvider.get());
  }

  public static ApplicationModule_GetDaoRepositoryFactory create(
      ApplicationModule module, Provider<MyRoomDatabase> myRoomDatabaseProvider) {
    return new ApplicationModule_GetDaoRepositoryFactory(module, myRoomDatabaseProvider);
  }

  public static DaoRepository proxyGetDaoRepository(
      ApplicationModule instance, MyRoomDatabase myRoomDatabase) {
    return Preconditions.checkNotNull(
        instance.getDaoRepository(myRoomDatabase),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
